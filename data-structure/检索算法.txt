//顺序查找（略）

//二分法,基于有序的数据(排序算法)进行查找
function binarySearch(arr,data){
	var min = 0,
		max = arr.length - 1,
		base;
	while(min <= max){
		base = Math.floor((min + max)/2);
		if(arr[base] == data){
			return base;
		}
		else if(arr[base] > data){
			max = base - 1;
		}
		else{
			min = base + 1;
		}
	}
	return -1;
}


//若上述二分法数据源中存在重复目标数据，统计出重复次数和相对位置
function binSearchRepeatCount(arr,data){
	var count = 0,
		position = binSearch(arr,data);
	if(position > -1){
		++count;
		for(var i=position-1; i>0; i--){
			if(arr[i] == data){
				++count;
			}
			else{
				break;
			}
		}
		for(var j=position+1; j<len; j++){
			if(arr[j] == data){
				++count;
			}
			else{
				break;
			}
		}
	}
	return count;
}